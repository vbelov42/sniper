cmake_minimum_required(VERSION 2.8)

# Define project
#project(SniperPolicy)

#
# build
get_target_property(_file SniperKernel LOCATION)
get_filename_component(_file ${_file} NAME)
set(SniperKernel_LIB_NAME ${_file} PARENT_SCOPE)
file(COPY cmt/version.cmt DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/cmt)
set(req_head "
package SniperPolicy

macro_remove    cppflags        \"-ansi -pedantic \"
macro_prepend   cppflags        \"-std=c++11 -fPIC \"

include_path none
include_dirs \"${CMAKE_INSTALL_PREFIX}/include\"
include_dirs \"${Boost_INCLUDE_DIR}\"
include_dirs \"${PYTHON_INCLUDE_DIR}\"

path_prepend PYTHONPATH \"${CMAKE_INSTALL_PREFIX}/python:${CMAKE_INSTALL_PREFIX}/lib\"
path_prepend LD_LIBRARY_PATH \"${CMAKE_INSTALL_PREFIX}/lib\"

")
file(READ cmt/requirements _rules)
string(FIND "${_rules}" "pattern" _offset)
string(SUBSTRING "${_rules}" "${_offset}" "-1" req_rules)
file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/cmt/requirements "${req_head}${req_rules}")
unset(_rules)
unset(_offset)

# install
install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/cmt DESTINATION ${datadir}/SniperPolicy)
install(DIRECTORY cmt/fragments DESTINATION ${datadir}/SniperPolicy/cmt)
